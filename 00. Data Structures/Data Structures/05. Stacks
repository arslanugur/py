#!/usr/bin/env python3

# 01. Maximum Element
#!/usr/bin/env python3

if __name__ == "__main__":
    stack = []
    ops_cnt = int(input().strip())
    max_elem = 0
    
    for _ in range(ops_cnt):
        args = list(map(int, input().strip().split()))
        
        if args[0] == 1:
            max_elem = max(max_elem, args[1])
            stack.append(args[1])
        if args[0] == 2:
            if stack.pop() == max_elem:
                if len(stack) > 0:
                    max_elem = max(stack)
                else:
                    max_elem = 0
        if args[0] == 3:
            print(max_elem)



# 02. Equal Stacks
#!/bin/python3

import sys

if __name__ == "__main__":
    n1,n2,n3 = input().strip().split(' ')
    n1,n2,n3 = [int(n1),int(n2),int(n3)]
    h1 = [int(h1_temp) for h1_temp in input().strip().split(' ')]
    h2 = [int(h2_temp) for h2_temp in input().strip().split(' ')]
    h3 = [int(h3_temp) for h3_temp in input().strip().split(' ')]
    stacks = [h1[::-1], h2[::-1], h3[::-1]]
    stack_sums = [sum(stacks[i]) for i in range(3)]
    
    while len({stack_sums[i] for i in range(3)}) > 1:
        tallest_stack = max(stack_sums)
        index = stack_sums.index(tallest_stack)
        removed = stacks[index].pop()
        stack_sums[index] -= removed
        
    print(min([sum(stacks[i]) for i in range(3)]))
    


# 03. Balanced Brackets
#!/bin/python3

import sys

def isBalanced(s):
    stack = []
 
    for letter in s:
        if letter == '{':
            stack.append(1)
        elif letter == '[':
            stack.append(2)
        elif letter == '(':
            stack.append(3)
        elif letter == '}':
            if len(stack) == 0:
                return False
            if stack.pop() != 1:
                return False
        elif letter == ']':
            if len(stack) == 0:
                return False
            if stack.pop() != 2:
                return False
        elif letter == ')':
            if len(stack) == 0:
                return False
            if stack.pop() != 3:
                return False
 
    return len(stack) == 0

if __name__ == "__main__":
    t = int(input().strip())
    for a0 in range(t):
        s = input().strip()
        result = isBalanced(s)
        if result is True:
            print('YES')
        else:
            print('NO')



# 04. Game of Two Stacks
#!/bin/python3

import sys


g = int(input().strip())
for a0 in range(g):
    n,m,x = input().strip().split(' ')
    n,m,x = [int(n),int(m),int(x)]
    a = list(map(int, input().strip().split(' ')))
    b = list(map(int, input().strip().split(' ')))
    
    a = a[::-1]
    b = b[::-1]
    
    handy_stack = []
    el_count = 0
    total = 0
    
    while len(a) > 0:
        if total + a[-1] <= x:
            temp = a.pop()
            handy_stack.append(temp)
            total += temp
            el_count += 1
        else:
            break
            
    
    total_b = 0
    while len(b) > 0:
        if total_b + b[-1] <= x:
            if total + b[-1] <= x:
                temp = b.pop()
                total += temp
                total_b += temp
                el_count += 1
            else:
                temp = b.pop()
                total = total - handy_stack.pop() + temp
                total_b += temp
        else:
            break
            
    print(el_count)
                
            
        
# 05. Largest Rectangle

# 06. Simple Text Editor

# 07. Waiter

# 08. Poisonous Plants

# 09. AND xor OR
