#!/usr/bin/env python3

# 01. Maximum Element
#!/usr/bin/env python3

if __name__ == "__main__":
    stack = []
    ops_cnt = int(input().strip())
    max_elem = 0
    
    for _ in range(ops_cnt):
        args = list(map(int, input().strip().split()))
        
        if args[0] == 1:
            max_elem = max(max_elem, args[1])
            stack.append(args[1])
        if args[0] == 2:
            if stack.pop() == max_elem:
                if len(stack) > 0:
                    max_elem = max(stack)
                else:
                    max_elem = 0
        if args[0] == 3:
            print(max_elem)



# 02. Equal Stacks
#!/bin/python3

import sys

if __name__ == "__main__":
    n1,n2,n3 = input().strip().split(' ')
    n1,n2,n3 = [int(n1),int(n2),int(n3)]
    h1 = [int(h1_temp) for h1_temp in input().strip().split(' ')]
    h2 = [int(h2_temp) for h2_temp in input().strip().split(' ')]
    h3 = [int(h3_temp) for h3_temp in input().strip().split(' ')]
    stacks = [h1[::-1], h2[::-1], h3[::-1]]
    stack_sums = [sum(stacks[i]) for i in range(3)]
    
    while len({stack_sums[i] for i in range(3)}) > 1:
        tallest_stack = max(stack_sums)
        index = stack_sums.index(tallest_stack)
        removed = stacks[index].pop()
        stack_sums[index] -= removed
        
    print(min([sum(stacks[i]) for i in range(3)]))
    


# 03. Balanced Brackets

# 04. Game of Two Stacks

# 05. Largest Rectangle

# 06. Simple Text Editor

# 07. Waiter

# 08. Poisonous Plants

# 09. AND xor OR
