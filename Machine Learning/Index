https://bilkav.com/makine-ogrenmesi-egitimi/

Section 2:
          Verilerin Yüklenmesi
          Kütüphanelerin yüklenmesi
          Verilerin içeri Alınması (data import)
          Py: Object Oriented Programming
          Eksik veriler
          Kategorik veriler
          Veri kümesinin eğitim ve test olarak bölünmesi
          öznitelik ölçekleme
          veri ön işleme şablonu
          quiz 1: veri ön işleme
          
Section 3: Tahmin (Prediction) 
Section 3.1: Basit Doğrusal
          Veri kümesi
          Veri ve problem Tanımı
          Doğrusal Regrasyon Probleminin py ile uygulaması
          quiz 2: Basit doğrusal regresyon
Section 3.2: Çoklu Doğrusal
          Veri kümesi
          Veri kümesi ve problemin tanımı
          Çoklu Doğrusal regresyonun py ile uygulaması
          P-Value
          Geri Eleme (Backward Elimination)
          Ödev 1: Çoklu Doğrusal Regresyon
          Ödev 1: Çözümü
          quiz 3: Çoklu Doğrusal Regresyon
Section 3.3: Polinomal Regresyon
          veri kümesi
          polinom regresyonun py ile uygulaması
          py ile polinom regresyon şablonu
Section 3.4: Destek Vektör ile tahmin (support verctor regression, SVR)
                veri kümesi
                py ile SVR uygulaması
              Karar ağacı ile tahmin
                veri kümesi
                karar ağacı regresyonun py ile uygulaması
              Rassal ağaç ile tahmin (Random Forest)
                veri kümesi
                py ile rassal agaç regresyonu
              Regression modellerinin karşılaştırılması
                R-kare ölçümü
                Düzeltilmiş R-kare
                Doğrusal regresyon parametrelerinin py ile uygulaması
Section 4: Sınıflandırma
          Sınıflandırma problemlerine genel bakış

------------------------------------


Machine Learning
  - Computer Vision
  - Object Detection
  - Image Processing - Deep Learning
  - Face Recognition
  - Virtual Reality
  - Augmented Reality
  - Voice Detection: Siri
  - Reinforced Learning: Robots
  - Marketing
  - CRM (XRM)
  - Recommendation Algorithms
  - Health: Diagnosis
  - Satellite Images: Geography, Agriculture
  - Freud Detection
  - Search Engines: Semantic Web, Automatic Agent
  - Industry 4.0: Factory without people, Life in Mars
  - Internet of Things
  
  
  
Curriculum
1. Python ile Makine Öğrenmesi Tanıtım
1.1 Makine Öğrenmesinin Uygulamaları
1.2 Makine Öğrenmesi ve Geleceğin Dünyası
1.3 Python ve Anaconda'nın kurulması
1.4 Dersler ile ilgili önemli notlar
      Metodoloji: CRISP-DM (Cross Industry Standard Process for Data Mining)
          Business Understanding - Problemin Tanınması
          Data Understanding
          Data Preparation
          Modeling
          Evaluation -- if not, check data ---> Business Understanding
          Deployment
       
        Tahmin - Prediction
        Sınıflandırma - Classification
        Bölütleme/Kümeleme - Clustering
        Birlikte Kural Çıkarımı - ARM 
        Pekiştirmeli Öğrenme - Reinforced Learning 
        Doğal Dil İşleme ve Metin İşleme - Text Processing
        Derin Öğrenme - Deep Learning
        Boyut İndirgeme ve Veri dönüştürme
  

2.Veri Analizi Proje Yönetimi ve Problem Tipleri
2.1 Verilerin Hazırlanması: Veri Kaynağı ve Dersin Web Sitesi
2.2 Verilerin Hazırlanması: Kütüphanelerin Yüklenmesi
import pandas as pd             # veriyi yüklemek için kullanılır
import numpy as np
import matplotlib.pyplot as plt

2.3 Verinin Python'dan Yüklenmesi ve içeri alınması (data import)
# veri yükleme
veriler = pd.read_csv("../../veriler.csv")

# veri ön işleme
# cx = veriler[['columnx']]
# cxandcy = veriler[['columnx','columny']]

2.4 Python ve Nesne Yönelimli Programlama
# how to define a class and a function
class man:                    # man = object
    height = 180
    def run(self, b):         # man runs
        return b + 10
 
jack = man()                  # jack is a man object --> define an object
print(jack.height)
print(jack.run(20))           # b = 20 ---> output: 3O

# Mathematical Way
# y = f(x)
# f(x) = x+10                 # x olarak aldığı parametriyi 10 fazlasıyla döndürüyor

# how to define a list
l = [1,3,4]





2.5 Eksik Veriler (Missing Values)
2.6 Kategorik Veriler
2.7 Verilerin Birleştirilmesi ve DataFrame Oluşturulması
2.8 Veri Kümesinin Eğitim ve Test olarak bölünmesi
2.9 Öznitelik Ölçekleme
2.10 Veri Ön işleme Şablonu


Veriyi Modelleme:
3.Tahmin (Prediction) #1: Basit Doğrusal Regresyon (Simple Linear Regression)
3.1 Tahmin (Prediction) Problemlerine Giriş
3.2 Veri Kümesinin İndirilmesi
3.3 Basit Doğrusal Regresyon (Simple Linear Regression)
3.4 Veri Yükleme ve Ön İşleme Şablonunun Kullanılması ve Regresyona Hazırlık
3.5 Python ile Basit Doğrusal Regresyon Model İnşası
3.6 Python ile Basit Doğrusal Regresyon Uygulaması
3.7 Basit Doğrusal Regresyon Görselleştirilmesi

4.Tahmin (Prediction) #2: Çoklu Doğrusal Regresyon (Multiple Linear Regression)
4.1 Veri Kümesi ve Problemin Tanınması
4.2 Çoklu Doğrusal Regresyon (Multiple Linear Regression) Kavramına Giriş
4.3 Kukla Değişken ve Tuzağı (Dummy Variable Trap)
4.4 P-Value (Olasılık Değeri)
4.5 Çok Değişkenli Modellerde, Değişken Seçimi
4.6 Çoklu Değişken için Veri Hazırlama (Python Kodu)
4.7 Çoklu Değişken Linear Model Oluşturma Python Kodlaması ve Model
4.8 Python ile Geri Eleme (Backward Elimination)
4.9 Ödev 1: Veri Kümesi ve Ödevin Açıklaması
4.10 Ödev 1: Çözüm 1. Parça: Verinin hazırlanması ve Çoklu Doğrusal Regresyon
4.11 Ödev 1: Çözüm 2. Parça: Geri Eleme (Backward Elimination)


5.Tahmin (Prediction) #3: Polinom Regresyon (Polynomial Regression)
5.1 Veri Kümesi, Kavramın ve Problemin Tanımı
5.2 Polinomal Regresyonun Python ile Uygulama kodu
5.3 Python ile Doğrusal Olmayan Şablon (Polinomial Regression Python Template)

6.Tahmin (Prediction) #4: Destek Vektör (Support Vector Regression)
6.1 SVR Tanımı ve Problem
6.2 Python ile Support Vector Tahmini Uygulaması

7.Tahmin (Prediction) #5: Karar Ağacı (Decision Tree)
7.1 Karar Ağacı kullanarak tahmin yöntemi
7.2 Python ile karar ağacı kullanarak tahmin


8.Tahmin (Prediction) #6: Rassal Ağaçlar (Random Forest) ile Tahmin
8.1 Rassal Ağaç (Random Forest) Algoritması ve Tahmin
8.2 Python ile Rassal Ağaç kullanarak Tahmin

9.Tahmin (Prediction) #7: Değerlendirme ve Metotların Karşılaştırılması
9.1 R2 Hesaplanması
9.2 Düzeltilmiş R2 Hesaplaması (Adjusted R2)
9.3 Python ile R2 hesaplama ve Algoritmaların Karşılaştırılması
9.4 Ödev 2: Ödevin tanımı ve veri kümesi
9.5 Ödev 2: Çözümü
9.6 ÖZET : Tahmin Metotlarının Karşılaştırılması

10.Sınıflandırma #1: Giriş ve Temel Kavramlar
10.1 Sınıflandırma ve Temel Kavramlar, Problemin Algısı
 
11.Sınıflandırma #2: Lojistik Regresyon (Logistic Regression)
11.1 Lojistik Regresyon Kavramı ve Algoritmanın Teorisi
11.2 Python ile Logistic Regression Uygulaması
11.3 Confusion Matrix (Karmaşıklık Matrisi) ve Sınıflandırma Şablonu

12.K-NN (K En Yakın Komşu)
12.1 K-NN (K Nearest Neighborhood) algoritmasına giriş
12.2 Python ile KNN Kodlaması

13.Support Vector Machine (SVM) ile Sınıflandırma
13.1 SVM algoritmasının çalışması ve detayları
13.2 SVM Algoritmasının Python ile kodlanması

14.SVM ve Çekirdek Hilesi (Kernel Trick)
14.1 Kernel Trick (Çekirdek Hilesi)
14.2 Python ile Çekirdek Hilesi Kodlama

15.Naif Bayes (Naive Bayes)
15.1 Naif Bayes (Naive Bayes)
15.2 Python Kodu : Naive Bayes ve GaussianNB, MultinominalNB, BernolliNB

16.Karar Ağacı ile Sınıflandırma (Decision Tree)
16.1 Karar ağacı ile sınıflandırmaya giriş
16.2 Python ile Karar Ağacı Sınıflandırma Kodu

17.Rassal Orman (Random Forest)
17.1 Rassal Orman ile Sınıflandırma
17.2 Python Kodu: Rassal orman ile sınıflandırma


18.Sınıflandırma Bölüm Sonu
18.1 Confusion Matris
18.2 Flase Positive ve False Negative Kavramları
18.3 Netlik/doğruluk (accuracy) paradoksu
18.4 ROC Eğrisi
18.5 AUC Değeri


19.Sınıflandırma Algoritmalarının Değerlendirilmesi
19.1 Sınıflandırma Şablonu
19.2 Ödev 3: Iris veri kümesi ve sınıflandırma algoritmaları
19.3 Ödev 3 : Çözümü

20.Bölütleme / Kümeleme (Clustering)
20.1 Gözetimsiz Öğrenmeye Giriş (Unsupervised Learning)

21.K-Means (K-Ortalama) Algoritması
21.1 Algoritmaya ve Kavramlara Giriş
21.2 Rassal Başlangıç Tuzağı
21.3 Küme / Bölüt sayısına karar vermek
21.4 Python ile K-Means Kodlaması

22.Hiyerarşik Bölütleme (Clustering)
22.1 Kavrama ve Algoritmaya Giriş
22.2 Hiyerarşik Bölütleme ve Dendogram Kavramı
22.3 Hiyerarşik Bölütleme / Kümeleme ve Dendogramların kullanılması

23.APriori Algoritması
23.1 Birliktelik Kural Çıkarımı Problemlerine Giriş
23.2 Python ile Apriori Algoritmasının Kodlanması

24.Eclat Algoritması
24.1 Eclat Algoritmasının Çalışması

25.Pekiştirmeli / Takviyeli Öğrenme (Reinforced Learning)
25.1 Reinforced Learning Kavramına Giriş
25.2 A/B Testi, Tek Kollu Canavar ve Reinforced Learning kullanım alanları

26.UCB (Üst Güven Aralığı) Yaklaşımı ve Kodlaması
26.1 UCB (Upper Confidence Bound, Üst Güven Sınırı)
26.2 Python ile Rasgele Yaklaşımın Kodlanması
26.3 Python ile UCB kodlama


27.Thompson Örneklemesi (Thompson Sampling) Yaklaşımı ve Kodlaması
27.2_Python Kodlaması : Thompson Sampling
27.1_Thompson Yaklaşımı ve Çalışması

28.Doğal Dil İşleme
28.1 Kavramlara ve DDİ Dünyasına giriş
28.2 Kodlama Öncesi Genel DDİ Problemleri ve Yaklaşımları
28.3 Veri Kümesi ve Bazı Kaynaklar
28.4 Python ilk Problemler : Sparce Matrix ve imla işaretleri
28.5 Python, 2. Problem: Büyük / Küçük Harfler
28.6 Python 3. Problem: Stop Words
28.7 Python 4. Kelime Gövdeleri (Stemmer)
28.8 Python 5. Kelime Vektörü Sayaç kullanımı (CountVectorizer)8 dk
28.9 Python 6. Makine öğrenmesi ve Sınıflandırma Kısmı10 dk

29.Derin Öğrenme
29.1 Yapay Sinir Ağlarına ve Nöron Yapısına Giriş
29.2 Aktivasyon Fonksiyonları (Activation Functions)
29.3 Katman Kavramı ve Çalışan bir Yapay Sinir Ağı
29.4 XOR Problemi ve Çözüm olacak YSA tasarımı
29.5 YSA Nasıl Öğrenir ? : Perceptron (Algılayıcı) kavramı
29.6 Gradyan Alçalış (Gradient Descendent)
29.7 Stokastik (Stochastic) , Yığın (Batch) ve Mini Yığın Gradyan Alçalışlar
29.8 YSA Öğrenme Algoritması ve İleri/Geri Yayılım (Backpropagation/Forwardpropagatio)
29.9 Derin Öğrenme Kütüphaneleri
29.10 Derin Öğrenme Kütüphanelerinin Kurulması
29.11 Problemin Tanımı ve Veri Kümesi
29.12 YSA Kodlamasına Giriş ve Keras ile Tanışma
29.13 Keras'a gizli katman eklemek ve bir Keras Bug'ı
29.14 Yapay Sinir Ağını Derlemek, Eğitmek çalıştırmak ve başarısı


30.Boyut İndirgeme (Dimension Reduction)
30.1 PCA (Principal Component Analysis) Birncil Bileşen Analizi
30.2 PCA, Python ile kodlanması
30.3 LDA: Linear Discriminant Analysis
30.4 LDA: Python ile kodlaması


31.Model Seçimi
31.1 Model Değerlendirmesi : k-fold Cross Validation
31.2 Model Seçimi : GridSearchCV

32.Bonus: XGBoost
32.1 XGBoost : Giriş, Özellikleri ve Kaynaklar
32.2 XGBoost: Kurulum ve Python Kodlaması

33.Bonus: Soru Cevap
33.1 KNN'deki K değeri neye göre alınır?
33.2 Modelinin Kaydedilmesi ve Tekrar kullanılması (Pickle Kütüphanesi)

34.Bonus: CNN (Convolutional Neural Networks)
34.1 CNN (Convolutional Neural Networks) Giriş
34.2 Uçtan Uca CNN Çalışması
34.3 CNN Görsel Uygulama ve Düzleştirme (Flattening)
34.4 CNN : Python ile Kodlama



